{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tuyennguyen/KLTN/ADMIN/src/pages/Administarive.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport axios from 'axios';\nimport { BASE_API } from '../constant/index';\nconst useRowStyles = makeStyles({\n  root: {\n    '& > *': {\n      borderBottom: 'unset'\n    }\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein,\n    price,\n    history: [{\n      date: '2020-01-05',\n      customerId: '11091700',\n      amount: 3\n    }, {\n      date: '2020-01-02',\n      customerId: 'Anonymous',\n      amount: 1\n    }]\n  };\n}\n\nfunction Row(props) {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const classes = useRowStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.calories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.fat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.carbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.protein\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            margin: 1,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Total price ($)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: row.history.map(historyRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: historyRow.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.customerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: historyRow.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: Math.round(historyRow.amount * row.price * 100) / 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 45\n                  }, this)]\n                }, historyRow.date, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"RF9p2CoDwMBXAZRTkFYWAJRAu48=\", false, function () {\n  return [useRowStyles];\n});\n\n_c = Row;\nRow.propTypes = {\n  row: PropTypes.shape({\n    calories: PropTypes.number.isRequired,\n    carbs: PropTypes.number.isRequired,\n    fat: PropTypes.number.isRequired,\n    history: PropTypes.arrayOf(PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      customerId: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired\n    })).isRequired,\n    name: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    protein: PropTypes.number.isRequired\n  }).isRequired\n};\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99), createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99), createData('Eclair', 262, 16.0, 24, 6.0, 3.79), createData('Cupcake', 305, 3.7, 67, 4.3, 2.5), createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5)];\nexport default function Administrator() {\n  _s2();\n\n  const [data, setData] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(\"https://vapi.vnappmob.com/api/province\") //thanh pho\n    .then(data => {\n      // console.log(data.data.results);\n      setData(data.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  var list = [];\n\n  for (let i = 0; i < data.length; i++) {\n    data.map(item => {\n      list.push(data[i].province_id);\n    });\n  }\n\n  const [Data2, setData2] = React.useState([]);\n  var numberList = [];\n  numberList = new Set(list);\n  var arrList = [...numberList]; //    console.log(arrList)\n\n  const [list3, setList3] = React.useState([]);\n  var data22 = [];\n\n  for (let i = 0; i < arrList.length; i++) {\n    axios.get(`https://vapi.vnappmob.com/api/province/district/${arrList[i]}`).then(data => {\n      // console.log(data.data.results);\n      setList3(data.data.results);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    for (let j = 0; j < (list3 === null || list3 === void 0 ? void 0 : list3.length); j++) {\n      data22.push(list3[j].district_id);\n    }\n  } // console.log(data22.length)\n\n\n  const [xa, setXa] = React.useState([]);\n\n  for (let m = 0; m < (data22 === null || data22 === void 0 ? void 0 : data22.length); m++) {\n    axios.get(`https://vapi.vnappmob.com/api/province/ward/${data22[m]}`).then(data => {\n      setXa(data.data.results);\n      console.log(data.data.results);\n    }).catch(err => {\n      console.log('loi');\n    });\n\n    for (let n = 0; n < xa.length; n++) {\n      axios.post(`${BASE_API}/wards`, {\n        ward_id: xa[n].ward_id,\n        ward_name: xa[n].ward_name,\n        ward_type: xa[n].ward_type,\n        district_id: xa[n].district_id\n      });\n    }\n  } // console.log(xa)\n  // console.log(list3)\n  // console.log(data22)\n  //   for(let i=0;i<data.length;i++){\n  //       for(let i=0;)\n  //     axios.get(\"http://localhost:1337/provinces\",{\n  //       province_id: data[i].province_id,\n  //       province_name: data[i].province_name,\n  //       province_type: data[i].province_type,\n  //     })\n  //     .then((reponse)=>{\n  //         console.log(reponse)\n  //     })\n  //     .catch((error)=>{\n  //         console.log(\"loi\");\n  //     })\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          row: row\n        }, row.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Administrator, \"iV74u5ZYDenH9PTALueBLaFhZFo=\");\n\n_c2 = Administrator;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Administrator\");","map":{"version":3,"sources":["/home/tuyennguyen/KLTN/ADMIN/src/pages/Administarive.jsx"],"names":["React","PropTypes","makeStyles","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","axios","BASE_API","useRowStyles","root","borderBottom","createData","name","calories","fat","carbs","protein","price","history","date","customerId","amount","Row","props","row","open","setOpen","useState","classes","paddingBottom","paddingTop","map","historyRow","Math","round","propTypes","shape","number","isRequired","arrayOf","string","rows","Administrator","data","setData","useEffect","get","then","results","catch","err","console","log","list","i","length","item","push","province_id","Data2","setData2","numberList","Set","arrList","list3","setList3","data22","j","district_id","xa","setXa","m","n","post","ward_id","ward_name","ward_type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport axios from 'axios';\nimport {BASE_API} from '../constant/index';\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nfunction createData(name, calories, fat, carbs, protein, price) {\n    return {\n        name,\n        calories,\n        fat,\n        carbs,\n        protein,\n        price,\n        history: [\n            { date: '2020-01-05', customerId: '11091700', amount: 3 },\n            { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\n        ],\n    };\n}\n\nfunction Row(props) {\n    const { row } = props;\n    const [open, setOpen] = React.useState(false);\n    const classes = useRowStyles();\n\n    return (\n        <React.Fragment>\n            <TableRow className={classes.root}>\n                <TableCell>\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n                    </IconButton>\n                </TableCell>\n                <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n                <TableCell align=\"right\">{row.carbs}</TableCell>\n                <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n            <TableRow>\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                        <Box margin={1}>\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                History\n              </Typography>\n                            <Table size=\"small\" aria-label=\"purchases\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Date</TableCell>\n                                        <TableCell>Customer</TableCell>\n                                        <TableCell align=\"right\">Amount</TableCell>\n                                        <TableCell align=\"right\">Total price ($)</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {row.history.map((historyRow) => (\n                                        <TableRow key={historyRow.date}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {historyRow.date}\n                                            </TableCell>\n                                            <TableCell>{historyRow.customerId}</TableCell>\n                                            <TableCell align=\"right\">{historyRow.amount}</TableCell>\n                                            <TableCell align=\"right\">\n                                                {Math.round(historyRow.amount * row.price * 100) / 100}\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </Box>\n                    </Collapse>\n                </TableCell>\n            </TableRow>\n        </React.Fragment>\n    );\n}\n\nRow.propTypes = {\n    row: PropTypes.shape({\n        calories: PropTypes.number.isRequired,\n        carbs: PropTypes.number.isRequired,\n        fat: PropTypes.number.isRequired,\n        history: PropTypes.arrayOf(\n            PropTypes.shape({\n                amount: PropTypes.number.isRequired,\n                customerId: PropTypes.string.isRequired,\n                date: PropTypes.string.isRequired,\n            }),\n        ).isRequired,\n        name: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        protein: PropTypes.number.isRequired,\n    }).isRequired,\n};\n\nconst rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n    createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n    createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n    createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n];\n\nexport default function Administrator() {\n    const [data, setData] = React.useState([]);\n    React.useEffect(() => {\n        axios.get(\"https://vapi.vnappmob.com/api/province\")  //thanh pho\n            .then((data) => {\n                // console.log(data.data.results);\n                setData(data.data.results);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n\n    }, [])\n\n    var list = [];\n    for (let i = 0; i < data.length; i++) {\n        data.map((item) => {\n            list.push(data[i].province_id)\n        })\n\n    }\n\n    const [Data2, setData2] = React.useState([]);\n    var numberList = [];\n    numberList = new Set(list);\n    var arrList = [...numberList];\n\n//    console.log(arrList)\n  const [list3, setList3] = React.useState([])\n    var data22 = [];\n    for (let i = 0; i < arrList.length; i++) {\n        axios.get(`https://vapi.vnappmob.com/api/province/district/${arrList[i]}`)\n            .then((data) => {\n                // console.log(data.data.results);\n                setList3(data.data.results);\n              \n            })\n            .catch((err) => {\n                console.log(err);\n            })\n            for (let j = 0; j < list3?.length; j++) {\n                data22.push(list3[j].district_id);\n            }\n\n       \n    }\n    // console.log(data22.length)\n\n    const [xa, setXa] =React.useState([])\n    for(let m=0;m<data22?.length;m++){\n        axios.get(`https://vapi.vnappmob.com/api/province/ward/${data22[m]}`)\n        .then((data) => {\n            setXa(data.data.results);\n            console.log(data.data.results)\n        })\n        .catch((err)=>{\n            console.log('loi')\n        })\n        for(let n=0;n<xa.length;n++){\n            axios.post(`${BASE_API}/wards`,{\n                ward_id: xa[n].ward_id,\n                ward_name: xa[n].ward_name,\n                ward_type: xa[n].ward_type,\n                district_id: xa[n].district_id,\n    \n            })\n\n        }\n    }\n    // console.log(xa)\n    // console.log(list3)\n\n\n\n    // console.log(data22)\n\n    //   for(let i=0;i<data.length;i++){\n    //       for(let i=0;)\n    //     axios.get(\"http://localhost:1337/provinces\",{\n    //       province_id: data[i].province_id,\n    //       province_name: data[i].province_name,\n    //       province_type: data[i].province_type,\n    //     })\n    //     .then((reponse)=>{\n    //         console.log(reponse)\n    //     })\n    //     .catch((error)=>{\n    //         console.log(\"loi\");\n    //     })\n    //   }\n\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"collapsible table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell />\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <Row key={row.name} row={row} />\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}"]},"metadata":{},"sourceType":"module"}