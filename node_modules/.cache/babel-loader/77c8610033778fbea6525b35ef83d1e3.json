{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tuyennguyen/KLTN/ADMIN/src/pages/dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { XGrid, useApiRef } from '@material-ui/x-grid';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\nexport default function XGridDemo() {\n  _s();\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: '150px'\n  }, {\n    field: 'HouseName',\n    headerName: 'HouseName',\n    width: '200px'\n  }, {\n    field: 'HouseType',\n    headerName: 'HouseType',\n    width: '200px'\n  }, {\n    field: 'Price',\n    headerName: 'Price',\n    width: '200px'\n  }, {\n    field: 'PeopleNumber',\n    headerName: 'PeopleNumber',\n    width: '200px'\n  }, {\n    field: 'BedNumber',\n    headerName: 'BedNumber',\n    width: '200px'\n  }, {\n    field: 'Number_of_bedroom',\n    headerName: 'Number_of_bedroom',\n    width: '200px'\n  }, {\n    field: 'Number_of_bathroom',\n    headerName: 'Number_of_bathroom',\n    width: '200px'\n  }, {\n    field: 'People_max',\n    headerName: 'People_max',\n    width: '200px'\n  }, {\n    field: 'Price_1_poeple_exceed',\n    headerName: 'Price_1_poeple_exceed',\n    width: '200px'\n  }, {\n    field: 'Status',\n    headerName: 'Status',\n    width: '200px',\n    type: 'boolean'\n  }, {\n    field: 'Address_ward',\n    headerName: 'Address_ward',\n    width: '200px'\n  }, {\n    field: 'District',\n    headerName: 'District',\n    width: '200px'\n  }, {\n    field: 'Province',\n    headerName: 'Province',\n    width: '200px'\n  }, {\n    field: 'Description',\n    headerName: 'Description',\n    width: '200px'\n  }];\n  const [data, setData] = React.useState();\n  const token = useSelector(state => state.login.jwt);\n  React.useEffect(() => {\n    // Request API.\n    axios.get('http://localhost:1337/users', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      setData(response.data);\n      console.log('Data: ', response.data);\n    }).catch(error => {\n      // Handle error.\n      console.log('An error occurred:', error.response);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      columns: columns,\n      pageSize: 5,\n      autoPageSize: true,\n      columnBuffer: 10,\n      disableExtendRowFullWidth: true,\n      onRowSelected: checkSelectRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(XGridDemo, \"OO3KeQCltL7UgrRH/JldFQJU9as=\", false, function () {\n  return [useSelector];\n});\n\n_c = XGridDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"XGridDemo\");","map":{"version":3,"sources":["/home/tuyennguyen/KLTN/ADMIN/src/pages/dashboard.jsx"],"names":["React","XGrid","useApiRef","useSelector","axios","DataGrid","XGridDemo","columns","field","headerName","width","type","data","setData","useState","token","state","login","jwt","useEffect","get","headers","Authorization","then","response","console","log","catch","error","height","checkSelectRow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { XGrid ,useApiRef} from '@material-ui/x-grid';\nimport {useSelector} from 'react-redux';\nimport axios from 'axios';\nimport { DataGrid } from '@material-ui/data-grid';\n\nexport default function XGridDemo() {\n    const columns = [\n        { field: 'id', headerName: 'ID', width:'150px',},\n        { field: 'HouseName', headerName: 'HouseName', width:'200px',},\n        { field: 'HouseType', headerName: 'HouseType', width:'200px',},\n        { field: 'Price', headerName: 'Price', width:'200px',},\n        { field: 'PeopleNumber', headerName: 'PeopleNumber', width:'200px',},\n        { field: 'BedNumber', headerName: 'BedNumber', width:'200px',},\n        { field: 'Number_of_bedroom', headerName: 'Number_of_bedroom', width:'200px',},\n        { field: 'Number_of_bathroom', headerName: 'Number_of_bathroom', width:'200px',},\n        { field: 'People_max', headerName: 'People_max', width:'200px',},\n        { field: 'Price_1_poeple_exceed', headerName: 'Price_1_poeple_exceed', width:'200px',},\n        { field: 'Status', headerName: 'Status', width:'200px',  type: 'boolean',},\n        { field: 'Address_ward', headerName: 'Address_ward', width:'200px',},\n        { field: 'District', headerName: 'District', width:'200px',},\n        { field: 'Province', headerName: 'Province', width:'200px',},\n        { field: 'Description', headerName: 'Description', width:'200px',},\n       \n      ];\n      const [data, setData] = React.useState()\n      const token = useSelector(state=>state.login.jwt);\n\n      React.useEffect(()=>{\n\n        // Request API.\n        axios\n          .get('http://localhost:1337/users', {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          })\n          .then(response => {\n            setData(response.data)\n            console.log('Data: ', response.data);\n          })\n          .catch(error => {\n            // Handle error.\n            console.log('An error occurred:', error.response);\n          });\n      },[])\n\n     \n\n    \n    \n\n      return (\n        <div style={{ height: 400, width: '100%' }}>\n          <DataGrid \n          rows={data} \n          columns={columns} pageSize={5}  autoPageSize \n          columnBuffer={10}\n          disableExtendRowFullWidth\t={true}\n          onRowSelected={checkSelectRow}\n          />\n        </div>\n      );\n    }"]},"metadata":{},"sourceType":"module"}